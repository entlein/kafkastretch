# Docker
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

variables:
 name: 'confluentpython'
 workDir: '$(Build.SourcesDirectory)/BaseImages/distrolessdebug/$(name)'
 imagerepo: '$(name)'
 regname: 'kafkawarriors'
 containerreg: '$(regname).azurecr.io'
 serviceconnection: ''
 azureSubscriptionEndpoint: ''
 azureResourceGroup: 'rg-kafka'
 tag: $(Build.BuildId)

trigger:
- consumerutil
- master


stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      LukasScanbatch
    steps:

    - task: AzureCLI@2
      displayName: 'login to ACR'
      inputs:
        azureSubscription: $(serviceconnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login -n $(regname)'
        workingDirectory: '$(workDir)'
        failOnStandardError: true

    - task: Bash@3
      displayName: 'docker build and push '
      inputs: 
        targetType: inline
        workingDirectory: '$(workDir)'
        script: |
          docker build . -t $(containerreg)/$(name):$(Build.BuildId)
          docker push $(containerreg)/$(name):$(Build.BuildId)



- stage: Deploy
  displayName: Deploy to Zookeeper
  jobs:  
  - job: Deploy
    displayName: Deploy to AKS-Zookeeper
    pool:
      LukasScanbatch
    steps:

    - task: AzureCLI@2
      displayName: 'login to ACR'
      inputs:
        azureSubscription: 'ALPSEC'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: 'az acr login -n $(regname)'
        workingDirectory: '$(workDir)'
        failOnStandardError: true

   
    - task: HelmInstaller@1
      displayName: Download Helm to build-agent
      inputs:
        helmVersionToInstall: v3.0.3


    - task: HelmDeploy@0
      displayName: Helm deploy - pythonUtils - akszk
      inputs:
        connectionType: Azure Resource Manager
        azureSubscriptionEndpoint: $(serviceconnection)
        azureResourceGroup: $(azureResourceGroup)
        kubernetesCluster: 'akszk'
        command: upgrade
        install: true
        force: false
        chartType: FilePath
        chartPath: '$(System.DefaultWorkingDirectory)/firstchart'
        releaseName: 'confluentpython'
        namespace: zookeeper
        overrideValues: image.tag=$(Build.BuildId)
        arguments: '--timeout 30m'  


